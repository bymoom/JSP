package com.jsp.filter;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.StringTokenizer;

import javax.servlet.Filter;
import javax.servlet.FilterChain;
import javax.servlet.FilterConfig;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;
import javax.servlet.annotation.WebFilter;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import com.jsp.dto.MemberVO;
import com.jsp.utils.ViewResolver;

//@WebFilter("/MemberDisabledFilter")
public class MemberDisabledFilter implements Filter {

	//로그인 체크를 제외시킬 url들을 담을 list
	private List<String> checkURLs = new ArrayList<String>();
		
	public void destroy() {
		// TODO Auto-generated method stub
	}

	public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException {
		
		//막을 것 : 등록, 수정, 삭제, 활성화
		HttpServletRequest httpReq = (HttpServletRequest) request;
		HttpServletResponse httpRes = (HttpServletResponse) response;
		
		String reqUrl = httpReq.getRequestURI().substring(httpReq.getContextPath().length());
		
		if(excludeCheck(reqUrl)) {
			chain.doFilter(request, response);
			return;
		}
		
		HttpSession session = httpReq.getSession();
		
		MemberVO loginUser = (MemberVO) session.getAttribute("loginUser");
		
		if(loginUser.getEnabled() == 0) {
			String url = "commons/memberDisabled";
			ViewResolver.view(httpReq, httpRes, url);
		}else {
			chain.doFilter(request, response);
		}
		
	}

	public void init(FilterConfig fConfig) throws ServletException {
		//web.xml에 설정한 exclude의 param을 가져온다
		String paramValue = fConfig.getInitParameter("checkURL");
		
		//param이 ','로 나뉘어져있기 때문에 tokenizer 사용해서 구분자 사용
		//(paramValue, ",", true) : 끝에 true를 주면 ','까지 뽑아줌
		StringTokenizer st = new StringTokenizer(paramValue, ",");
		
		while(st.hasMoreElements()) {
			//전역변수인 exURLs list에 로그인체크를 제외할 url 넣기
			checkURLs.add(st.nextToken());
		}
	}
	
	private boolean excludeCheck(String url) {
		//exURLs : 전역변수(로그인체크를 제외할 url이 들어있는 list)
		for(String exURL : checkURLs) {
			System.out.println(exURL);
			if(url.contains(exURL)) { //요청받은 url과 로그인체크를 제외할 url이 일치하는 경우
				return true;
			}
		}
		return false; //요청받은 url과 로그인체크를 제외할 url이 일치하지 않는 경우
	}

}
